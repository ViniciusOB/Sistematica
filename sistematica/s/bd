-- Criação da tabela de usuários (professores e administradores)
CREATE TABLE Usuario (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome_completo VARCHAR(100) NOT NULL,
    nome_usuario VARCHAR(50) NOT NULL UNIQUE,
    senha VARCHAR(255) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    papel ENUM('Professor', 'Administrador') NOT NULL
);

-- Criação da tabela de disciplinas
CREATE TABLE Disciplina (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL
);

-- Criação da tabela de turmas
CREATE TABLE Turma (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(50) NOT NULL,
    nivel_ensino ENUM('Fundamental 2', 'Ensino Médio') NOT NULL -- Adicionada a coluna de nível de ensino
);

-- Criação da tabela de associação entre professores, disciplinas e turmas
CREATE TABLE ProfessorDisciplinaTurma (
    professor_id INT NOT NULL,
    disciplina_id INT NOT NULL,
    turma_id INT NOT NULL,
    PRIMARY KEY (professor_id, disciplina_id, turma_id),
    FOREIGN KEY (professor_id) REFERENCES Usuario(id) ON DELETE CASCADE,
    FOREIGN KEY (disciplina_id) REFERENCES Disciplina(id) ON DELETE CASCADE,
    FOREIGN KEY (turma_id) REFERENCES Turma(id) ON DELETE CASCADE
);

-- Criação da tabela de sistemáticas avaliativas
CREATE TABLE Sistematica (
    id INT AUTO_INCREMENT PRIMARY KEY,
    professor_id INT NOT NULL,
    disciplina_id INT NOT NULL,
    turma_id INT NOT NULL,
    tipo_avaliacao ENUM('AV1', 'AV2', 'PD', 'Recuperacao') NOT NULL,
    bimestre TINYINT NOT NULL CHECK (bimestre BETWEEN 1 AND 4),
    data_entrega DATE NOT NULL,
    ano INT NOT NULL,
    descricao TEXT NOT NULL,
    aprovada TINYINT(1) DEFAULT NULL, -- Coluna para indicar se a avaliação foi aprovada
    mensagem_reprovacao TEXT, -- Coluna para armazenar a mensagem de reprovação, se aplicável
    status ENUM('Pendente', 'Concluída') DEFAULT 'Pendente',
    data_envio TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (professor_id) REFERENCES Usuario(id) ON DELETE CASCADE,
    FOREIGN KEY (disciplina_id) REFERENCES Disciplina(id) ON DELETE CASCADE,
    FOREIGN KEY (turma_id) REFERENCES Turma(id) ON DELETE CASCADE
);
